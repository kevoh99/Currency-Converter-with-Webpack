//////////////////////// Extra tweaks added as learned from https://www.youtube.com/watch?v=MpGLUVbqoYQ. The video is also available on my computer here: C:\Users\KEVIN\Downloads\Webpack Tutorials\Freecodecamp tutorial //////////////

(COMPLETED) Add the line of code below so that generated files are stored inside the 'imgs' folder:

generator: {
          filename: 'imgs/[hash][ext][query]' // Store generated files in 'imgs' folder
    }

- (NOT COMPLETED, BUT PLUGIN IS INSTALLED) Split the config file into three files: Guide: https://youtu.be/MpGLUVbqoYQ?t=4037 Timestamp: 1:07:13
	- webpack.dev.js (for development mode. Code runs in memory. js generated is not minimized)
	- webpack.prod.js (for production mode. Files, e.g. images are generated into the project and minimized)
	- webpack.common.js (shared between both modes)
	- Change package.json scripts to include a call to either mode (webpack.dev.js for dev and webpack.prod.js for build)
		- i.e. --config webpack.dev.js and --config webpack.prod.js
	- Take note of the subsequent naming convention change at https://youtu.be/MpGLUVbqoYQ?t=5398 Timestamp: 1:29:58
	- Also take note of the changes at https://youtu.be/MpGLUVbqoYQ?t=5799 Timestamp: 1:36:39
	- Also, check this for html mininifying options: https://youtu.be/MpGLUVbqoYQ?t=6421 Timestamp 1:47:01

- (COMPLETED) Change the name of the output file to include a hash key and end with 'bundle'.js

- (COMPLETED) Add vendor.js entry point so that we separate our own app code from vendor code. (e.g. bootstrap, jquery, and other libraries) that doesn't change as frequently.

- (NOT COMPLETED, BUT PLUGIN IS INSTALLED) Added the ability to extract css files in production for better user experience. For this, we have to install "mini css extract plugin" using "npm install --save-dev mini-css-extract-plugin". We then need to change the css loader approproiately, removing style-loader (in production only). See https://youtu.be/MpGLUVbqoYQ?t=5686 Timestamp: 1:34:45

- (NOT COMPLETED, BUT PLUGIN IS INSTALLED) Add ability to minimize css files and html files. Although the additional video above recommends using the "optmize css assets webpack plugin", webpack 5 recommends using css-minimizer-webpack-plugin instead. The commmand to install it is: npm install --save-dev css-minimizer-webpack-plugin. 
	To learn how to reintroduce terser plugin after adding this plugin, go here: https://youtu.be/MpGLUVbqoYQ?t=6294. If terser still doesn't work on the generated js file, check the instruction here: https://github.com/webpack-contrib/css-minimizer-webpack-plugin

- (COMPLETED) Change css rules regex in webpack config file to /.s?css$/ to factor in sass files. Also added sass-loader using the following commmand: Timestamp: 50:05
	- npm install sass-loader node-sass webpack --save-dev 